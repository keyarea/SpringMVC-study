<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <aop:component-scan base-package="net.qipo"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--
      默认前端控制器是拦截所有资源(除了jsp),js文件就404了;js是交给tomcat处理的
     -->
    <!-- 告诉SpringMVC,自己映射的请求就自己处理,没有映射的请求就直接交给tomcat -->
    <!-- 静态资源能够访问,动态映射的就不可以 -->
    <mvc:default-servlet-handler/>
    <!-- SpringMVC可以保证动态请求和静态请求都能够访问 -->
    <!-- 使用自己配置的类型转换组件 -->
    <mvc:annotation-driven></mvc:annotation-driven>
<!-- 配置文件上传解析器, id必须是multipartResolver  -->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
        <property name="maxUploadSize" value="#{1024*1024*20}"/>
        <!-- 设置默认的编码 -->
        <property name="defaultEncoding" value="utf-8"/>
    </bean>
</beans>