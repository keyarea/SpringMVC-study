<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">
    <display-name>helloWorld</display-name>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- SpringMVC的思想是有一个前端控制器能拦截所有的请求,并智能派发;
         这个前端控制器是一个servlet;应该在web.xml中配置这个servlet来拦截所有的请求;
     -->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!-- 指定SpringMVC配置文件的位置 -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!-- servlet启动加载,原本是第一次访问的时候创建对象
            load-on-startup: 服务器启动的时候创建对象,值越小优先级越高,越先创建
         -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <!--
            /* 和 / 都是拦截所有的请求
            /* 的范围更大: 还会拦截到jsp页面;一旦拦截页面就无法显示了;
            / : 会拦截所有的请求但是不会拦截jsp页面,能保证jsp访问正常;
         -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>